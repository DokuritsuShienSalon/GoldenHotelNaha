@use "sass:math";

////////////////////
// インナー幅設定
////////////////////
// コンテンツのインナー幅（最も共通の幅が多い部分）
$inner: 1366px;
// ※キャンパス幅ではなくインナーの幅を指す

// 余白
$padding-pc: 25px;
$padding-sp: 20px;
$size15: 15px;
$size144: 144px;
// ※PC時：デザインカンプの余白の幅ではない。PC時は通常25pxで大丈夫！


////////////////////
// フォント設定
////////////////////

$base-font-family: Noto Serif JP, serif;
$second-font-family: "Julius Sans One', sans-serif";
// ※検証ツールでしっかり反映されているか確認する

body {
  font-family: $base-font-family;
}

// フォントウェイト
$regular: 300;
$normal: 400;
$bold: 700;

////////////////////
// 色の指定
////////////////////

//色指定（共通性のあるものは出来る限り指定すると良い）
$black: #111;
$white: #fff;
$blue: #29415f;
$gold: #cfab6e;

////////////////////
// メディアクエリとブレークポイントの設定
////////////////////

//ブレイクポイント
$breakpoints: (
  se: 375,
  sm: 600,
  md: 768,
  lg: 1024,
  xl: 1440,
);


//メディアクエリー
$mediaquerys: (
  se: "screen and (max-width: #{map-get($breakpoints,'se')}px)",
  sm: "screen and (min-width: #{map-get($breakpoints,'sm')}px)",
  md: "screen and (min-width: #{map-get($breakpoints,'md')}px)",
  lg: "screen and (min-width: #{map-get($breakpoints,'lg')}px)",
  xl: "screen and (min-width: #{map-get($breakpoints,'xl')}px)",
);

// @include mq(){}で書くとブレークポイントが反映される（初期値はmd）
@mixin mq($mediaquery: md) {
  @media #{map-get($mediaquerys, $mediaquery)} {
    @content;
  }
}

// remへの計算式（16pxを基準としている。10pxを基準とする場合は16を10に変更する）
@function re($pixels) {
  @return math.div($pixels, 16) * 1rem;
}

/* Clamp */  
*, *::before, *::after {
  /* 最小サイズ、 最大サイズ、 最小画面幅、最大画面幅（単位px） */
  --min-size: 10;
  --max-size: 36;
  --min-viewport: 320;
  --max-viewport: 768;

  /* a 傾き */
  --slope: calc((var(--max-size) - var(--min-size)) / (var(--max-viewport) - var(--min-viewport)));
  /* b 切片 */
  --intercept: calc(var(--min-size) - var(--slope) * var(--min-viewport));
  /* y = ax + b 可変サイズ */
  --fluid-size: calc(var(--slope) * 100vw + var(--intercept) * 1px);
  /* clamp(最小サイズ, 可変サイズ, 最大サイズ) */
  --clamp-size: clamp(var(--min-size) * 1px, var(--fluid-size), var(--max-size) * 1px);
}